version: '3.9'

services:
  db:
    image: postgres:16.4-alpine
    environment:
      - POSTGRES_DB=shop_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5434:5432'
    volumes:
      - db_data:/var/lib/postgresql/data

  postgresql:
    image: postgres:16.4-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5433:5432'
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    command: >
      bash -c "
      docker-entrypoint.sh postgres &
      sleep 5 &&
      psql -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = 'backend'\" | grep -q 1 || psql -U postgres -c 'CREATE DATABASE backend;' &&
      psql -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = 'bank_card'\" | grep -q 1 || psql -U postgres -c 'CREATE DATABASE bank_card;' &&
      wait
      "

  web:
    build:
      context: .
      dockerfile: site_prototype.Dockerfile
    command: /app/entrypoint.sh
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./site_prototype:/app
    ports:
      - '8000:8000'
    depends_on:
      - db

  backend-app:
    build:
      context: .
      dockerfile: backend.Dockerfile
    depends_on:
      - postgresql
    ports:
      - "8080:8080"
    volumes:
      - maven_cache:/root/.m2

  bank-card-app:
    build:
      context: .
      dockerfile: bankcard.Dockerfile
    depends_on:
      - postgresql
    ports:
      - "8081:8081"
    volumes:
      - maven_cache:/root/.m2

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: react-ui
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  db_data: {}
  postgresql_data: {}
  maven_cache: {}
